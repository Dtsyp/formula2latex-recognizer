services:
  app:
    build:
      context: .
      dockerfile: src/Dockerfile
    env_file:
      - .env
    volumes:
      - ./src:/app/src
    depends_on:
      - database
      - rabbitmq

  telegram-bot:
    build:
      context: .
      dockerfile: src/Dockerfile
    command: python src/telegram_bot/main.py
    env_file:
      - .env
    environment:
      - API_BASE_URL=http://app:8000
    volumes:
      - ./src:/app/src
      - ./user_sessions.json:/app/user_sessions.json
    depends_on:
      - app
      - database
    restart: unless-stopped

  web-proxy:
    image: nginx:1.25.3
    depends_on:
      - app
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro

  rabbitmq:
    image: rabbitmq:3.12-management
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq-data:/var/lib/rabbitmq
    restart: on-failure

  database:
    image: postgres:16.1
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped

volumes:
  rabbitmq-data:
  postgres-data:
